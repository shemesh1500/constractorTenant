{"version":3,"sources":["../../../shared/library/helpers/history.js","../../../shared/config/auth0.config.js","../../../shared/containers/Authentication/Auth0/Auth0.js","../../../shared/containers/Authentication/Auth0/Auth0Callback.js","../../../shared/components/Notification.js","../../../shared/components/uielements/popover.js","../../../shared/components/ColorChooser.style.js","../../../shared/components/ColorChoser.js","../../../shared/components/EditableComponent.js","../../../shared/components/index.js"],"names":["createBrowserHistory","forceRefresh","clientID","domain","allowedConnections","rememberLastLogin","language","closable","options","auth","autoParseHash","responseType","redirect","redirectUrl","languageDictionary","title","emailInputPlaceholder","passwordInputPlaceholder","theme","labeledSubmitButton","logo","primaryColor","authButtons","connectionName","displayName","foregroundColor","Auth0","lock","Auth0Lock","Auth0Config","login","show","handleAuthentication","on","setSession","error","notification","authResult","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","accessToken","idToken","history","replace","logout","removeItem","isAuthenticated","parse","getItem","EventEmitter","Auth0Callback","useEffect","authActions","createNotification","type","message","description","ColorChooserDropdown","styled","div","props","borderRadius","WithDirection","colors","seectedColor","changeColor","React","useState","visible","setVisibility","content","className","map","color","index","style","background","key","onClick","trigger","onVisibleChange","backgroundColor","EditableComponent","value","editable","state","setState","check","onChange","itemKey","rows","event","target","onPressEnter"],"mappings":"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","file":"static/js/118.4c2fb363.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  forceRefresh: true,\n});\n","export default {\n  clientID: \"your_client_id\",\n  domain: \"your_domain_name\",\n  allowedConnections: [\"Username-Password-Authentication\"],\n  rememberLastLogin: true,\n  language: \"en\",\n  closable: true,\n  options: {\n    auth: {\n      autoParseHash: true,\n      responseType: \"token id_token\",\n      redirect: true,\n      redirectUrl:\n        process.env.NODE_ENV !== \"production\"\n          ? \"http://localhost:3000/auth0loginCallback\"\n          : \"https://your_domain_name/auth0loginCallback\"\n    },\n    languageDictionary: {\n      title: \"Isomorphic\",\n      emailInputPlaceholder: \"demo@gmail.com\",\n      passwordInputPlaceholder: \"demodemo\"\n    },\n    theme: {\n      labeledSubmitButton: true,\n      logo: \"your_logo_url\",\n      primaryColor: \"#E14615\",\n      authButtons: {\n        connectionName: {\n          displayName: \"Log In\",\n          primaryColor: \"#b7b7b7\",\n          foregroundColor: \"#000000\"\n        }\n      }\n    }\n  }\n};\n","import { EventEmitter } from 'events';\nimport Auth0Lock from 'auth0-lock';\nimport history from '@iso/lib/helpers/history';\nimport Auth0Config from '@iso/config/auth0.config';\nimport { notification } from '@iso/components';\n\nclass Auth0 extends EventEmitter {\n  lock = new Auth0Lock(\n    Auth0Config.clientID,\n    Auth0Config.domain,\n    Auth0Config.options\n  );\n\n  login = () => {\n    if (!this.lock) {\n      return;\n    }\n    this.lock.show();\n  };\n  handleAuthentication = () => {\n    // Add callback Lock's `authenticated` event\n    this.lock.on('authenticated', this.setSession);\n    // Add callback for Lock's `authorization_error` event\n    this.lock.on('authorization_error', error =>\n      notification('error', 'Wrong mail or password')\n    );\n  };\n  setSession = authResult => {\n    // Set the time that the access token will expire at\n    let expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    // navigate to the dashboard route\n    history.replace('/dashboard');\n  };\n  logout = () => {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    history.replace('/');\n  };\n\n  isAuthenticated = () => {\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\n    return new Date().getTime() < expiresAt;\n  };\n}\nexport default new Auth0();\n","import React, { useEffect } from 'react';\nimport Auth0 from './Auth0';\nimport authActions from '@iso/redux/auth/actions';\nconst Auth0Callback = () => {\n  useEffect(() => {\n    Auth0.handleAuthentication();\n    authActions.login();\n  }, []);\n\n  return <p>Loading ...</p>;\n};\n\nexport default Auth0Callback;\n","import { notification } from 'antd';\n\nconst createNotification = (type, message, description) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\nexport default createNotification;\n","import { Popover } from 'antd';\n\nexport default Popover;\n","import styled from 'styled-components';\nimport { borderRadius } from '@iso/lib/helpers/style_utils';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst ColorChooserDropdown = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  max-width: 160px;\n\n  .ant-btn {\n    width: 20px;\n    height: 20px;\n    border: 0;\n    outline: 0;\n    padding: 0;\n    margin: ${props =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n    ${borderRadius('3px')};\n\n    &:last-child {\n      margin: 0;\n    }\n\n    &:nth-child(n + 6) {\n      margin-top: 15px;\n    }\n\n    &:nth-child(5n) {\n      margin-right: 0;\n      margin-left: 0;\n    }\n  }\n`;\n\nexport default WithDirection(ColorChooserDropdown);\n","import React from 'react';\nimport Button from './uielements/button';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\n\nexport default function({ colors, seectedColor, changeColor }) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n  function handleVisibleChange() {\n    setVisibility(visible => !visible);\n  }\n  const content = () => (\n    <ColorChooserDropdown className=\"isoColorOptions\">\n      {colors.map((color, index) => {\n        const onClick = () => {\n          hide();\n          changeColor(index);\n        };\n        const style = {\n          background: color,\n        };\n        return <Button key={index} onClick={onClick} style={style} />;\n      })}\n    </ColorChooserDropdown>\n  );\n  return (\n    <Popover\n      content={content()}\n      trigger=\"click\"\n      visible={visible}\n      onVisibleChange={handleVisibleChange}\n    >\n      <Button\n        style={{ backgroundColor: colors[seectedColor] }}\n        className=\"isoColorChooser\"\n      />\n    </Popover>\n  );\n}\n","import React from 'react';\nimport { Icon } from 'antd';\nimport { Textarea as Input } from './uielements/input';\n\nexport default function EditableComponent(props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false,\n  });\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setState({ ...state, value });\n  }\n  function check() {\n    setState({ ...state, editable: false });\n    if (props.onChange) {\n      props.onChange(props.itemKey, state.value);\n    }\n  }\n  function edit() {\n    setState({ ...state, editable: true });\n  }\n\n  const { value, editable } = state;\n  return (\n    <div className=\"isoNoteContent\">\n      {editable ? (\n        <div className=\"isoNoteEditWrapper\">\n          <Input\n            rows={3}\n            value={value}\n            onChange={handleChange}\n            onPressEnter={check}\n          />\n          <Icon type=\"check\" className=\"isoNoteEditIcon\" onClick={check} />\n        </div>\n      ) : (\n        <p className=\"isoNoteTextWrapper\" onClick={edit}>\n          {value || ' '}\n          <Icon type=\"edit\" className=\"isoNoteEditIcon\" />\n        </p>\n      )}\n    </div>\n  );\n}\n","import notification from './Notification';\nimport ColorChoser from './ColorChoser';\nimport EditableComponent from './EditableComponent';\n\nexport { notification, ColorChoser, EditableComponent };\n"],"sourceRoot":""}